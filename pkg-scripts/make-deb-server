#!/bin/sh

if [ "$VIRCADIA_QT_PATH" = "" ]; then
    QT5_LIBS=$HOME/vircadia-files/qt/qt5-install/lib
else
    QT5_LIBS=$VIRCADIA_QT_PATH/lib
fi

GITDATE=`git log -n 1 --format=raw | grep author | cut -d">" -f 2 | cut -d" " -f 2 | xargs -I {} date -d @{} +"%Y%m%d"`
GITCOMMIT=`git rev-parse HEAD | cut -c 1-7`
VERSION=$DEBVERSION-$GITDATE-$GITCOMMIT
BUILD_DIR=$DEBBUILDDIR

if [ -z "${BUILD_DIR}" ]; then
    BUILD_DIR=./build
fi

sudo apt-get install chrpath patchelf binutils dh-make

DEB_BUILD_ROOT=temp-make-deb/vircadia-server_$VERSION-0ubuntu1
rm -r temp-make-deb
mkdir -p $DEB_BUILD_ROOT

# copy the files over
cp $BUILD_DIR/assignment-client/assignment-client $DEB_BUILD_ROOT
cp $BUILD_DIR/domain-server/domain-server $DEB_BUILD_ROOT
cp $BUILD_DIR/tools/oven/oven $DEB_BUILD_ROOT
cp $BUILD_DIR/libraries/*/*.so $DEB_BUILD_ROOT
cp $BUILD_DIR/ice-server/ice-server $DEB_BUILD_ROOT
chrpath -d $DEB_BUILD_ROOT/*
ls $DEB_BUILD_ROOT/*.so | xargs -I{} patchelf --set-rpath '/opt/vircadia/lib' {}
patchelf --set-rpath '/opt/vircadia/lib' $DEB_BUILD_ROOT/domain-server
patchelf --set-rpath '/opt/vircadia/lib' $DEB_BUILD_ROOT/assignment-client
patchelf --set-rpath '/opt/vircadia/lib' $DEB_BUILD_ROOT/oven
patchelf --set-rpath '/opt/vircadia/lib' $DEB_BUILD_ROOT/ice-server
if [ "$VIRCADIA_USE_SYSTEM_QT" = "" ]; then
	cp $QT5_LIBS/libQt5Network.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5Core.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5Widgets.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5Gui.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5Script.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5WebSockets.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5Qml.so.*.*.* $DEB_BUILD_ROOT
	cp $QT5_LIBS/libQt5ScriptTools.so.*.*.* $DEB_BUILD_ROOT
	chmod +x $DEB_BUILD_ROOT/*.so.*.*.*
fi
strip --strip-all $DEB_BUILD_ROOT/*
cp pkg-scripts/new-server $DEB_BUILD_ROOT
cp -a domain-server/resources $DEB_BUILD_ROOT
find $DEB_BUILD_ROOT/resources -name ".gitignore" -delete
find $DEB_BUILD_ROOT/resources -type f -executable -exec sh -c 'chmod -x {}' \;
cp README.md $DEB_BUILD_ROOT
cp README_hifi.md $DEB_BUILD_ROOT
cp -a $BUILD_DIR/assignment-client/plugins $DEB_BUILD_ROOT
strip --strip-all $DEB_BUILD_ROOT/plugins/*.so
strip --strip-all $DEB_BUILD_ROOT/plugins/*/*.so

#begin the debian package construction
cd $DEB_BUILD_ROOT
dh_make -p vircadia-server_$VERSION-0ubuntu1 -c apache -s --createorig -y
cd -

cp pkg-scripts/vircadia-assignment-client.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-assignment-client@.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-domain-server.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-domain-server@.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-ice-server.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-ice-server@.service $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-server.target $DEB_BUILD_ROOT/debian
cp pkg-scripts/vircadia-server@.target $DEB_BUILD_ROOT/debian

cp pkg-scripts/server-control $DEB_BUILD_ROOT/debian/control
cp pkg-scripts/server-prerm $DEB_BUILD_ROOT/debian/prerm
cp pkg-scripts/server-postinst $DEB_BUILD_ROOT/debian/postinst
cp pkg-scripts/server-postrm $DEB_BUILD_ROOT/debian/postrm
cp LICENSE $DEB_BUILD_ROOT/debian/copyright

echo 10 > $DEB_BUILD_ROOT/debian/compat

echo /etc/opt/vircadia > $DEB_BUILD_ROOT/debian/dirs
echo /var/lib/vircadia >> $DEB_BUILD_ROOT/debian/dirs

echo README.md > $DEB_BUILD_ROOT/debian/docs
echo README_hifi.md >> $DEB_BUILD_ROOT/debian/docs

echo assignment-client opt/vircadia > $DEB_BUILD_ROOT/debian/install
echo domain-server opt/vircadia >> $DEB_BUILD_ROOT/debian/install
echo oven opt/vircadia >> $DEB_BUILD_ROOT/debian/install
echo ice-server opt/vircadia >> $DEB_BUILD_ROOT/debian/install
echo new-server opt/vircadia >> $DEB_BUILD_ROOT/debian/install
if [ "$VIRCADIA_USE_SYSTEM_QT" = "" ]; then
	for so in *.so.*.*.*; do
		echo $so opt/vircadia/lib >> $DEB_BUILD_ROOT/debian/install
	done
fi
for so in *.so; do
	echo $so opt/vircadia/lib >> $DEB_BUILD_ROOT/debian/install
done
#for service in *.service; do
#	echo $service opt/vircadia/systemd >> $DEB_BUILD_ROOT/debian/install
#done
#for target in *.target; do
#	echo $target opt/vircadia/systemd >> $DEB_BUILD_ROOT/debian/install
#done

cd $DEB_BUILD_ROOT
find resources -type f -exec sh -c 'echo {} opt/vircadia/$(dirname "{}") >> debian/install' \;
find plugins -type f -exec sh -c 'echo {} opt/vircadia/$(dirname "{}") >> debian/install' \;

if [ "$VIRCADIA_USE_SYSTEM_QT" = "" ]; then
	SOFILES=`ls *.so *.so.*.*.* | grep -Po '^(.+\.so(\.\d+)?)' | sed 's/\./\\\./g' | paste -d'|' -s`
else
	SOFILES=`ls *.so | grep -Po '^(.+\.so(\.\d+)?)' | sed 's/\./\\\./g' | paste -d'|' -s`
fi

DEPENDS=`find * -path debian -prune -o -type f -executable -exec sh -c 'objdump -p {} | grep NEEDED' \; \
	| awk '{print $2}' | sort | uniq | egrep -v "^($SOFILES)$" \
	| xargs -n 1 -I {} sh -c 'dpkg -S {} | head -n 1' | cut -d ':' -f 1 | sort | uniq | paste -d',' -s`
cd -

cp pkg-scripts/server-rules $DEB_BUILD_ROOT/debian/rules
sed "s/{DEPENDS}/$DEPENDS/" pkg-scripts/server-control > $DEB_BUILD_ROOT/debian/control

cd $DEB_BUILD_ROOT
dpkg-buildpackage -us -uc
cd -

cp $DEB_BUILD_ROOT/../*.deb .
